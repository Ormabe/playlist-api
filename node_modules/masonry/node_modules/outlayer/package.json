{
  "_args": [
    [
      {
        "raw": "outlayer@https://github.com/eiriklv/outlayer/archive/533767c6e3295048b1b3d0b0d5913f977b6ed0f5.tar.gz",
        "scope": null,
        "escapedName": "outlayer",
        "name": "outlayer",
        "rawSpec": "https://github.com/eiriklv/outlayer/archive/533767c6e3295048b1b3d0b0d5913f977b6ed0f5.tar.gz",
        "spec": "https://github.com/eiriklv/outlayer/archive/533767c6e3295048b1b3d0b0d5913f977b6ed0f5.tar.gz",
        "type": "remote"
      },
      "/Users/Rabiya/Desktop/music-db/node_modules/masonry"
    ]
  ],
  "_from": "https://github.com/eiriklv/outlayer/archive/533767c6e3295048b1b3d0b0d5913f977b6ed0f5.tar.gz",
  "_id": "outlayer@1.2.0",
  "_inCache": true,
  "_location": "/masonry/outlayer",
  "_phantomChildren": {},
  "_requested": {
    "raw": "outlayer@https://github.com/eiriklv/outlayer/archive/533767c6e3295048b1b3d0b0d5913f977b6ed0f5.tar.gz",
    "scope": null,
    "escapedName": "outlayer",
    "name": "outlayer",
    "rawSpec": "https://github.com/eiriklv/outlayer/archive/533767c6e3295048b1b3d0b0d5913f977b6ed0f5.tar.gz",
    "spec": "https://github.com/eiriklv/outlayer/archive/533767c6e3295048b1b3d0b0d5913f977b6ed0f5.tar.gz",
    "type": "remote"
  },
  "_requiredBy": [
    "/masonry"
  ],
  "_resolved": "https://github.com/eiriklv/outlayer/archive/533767c6e3295048b1b3d0b0d5913f977b6ed0f5.tar.gz",
  "_shasum": "1bf994ae645a7e95249159f1a42a29710c4e36af",
  "_shrinkwrap": null,
  "_spec": "outlayer@https://github.com/eiriklv/outlayer/archive/533767c6e3295048b1b3d0b0d5913f977b6ed0f5.tar.gz",
  "_where": "/Users/Rabiya/Desktop/music-db/node_modules/masonry",
  "bugs": {
    "url": "https://github.com/braznaavtrav/outlayer/issues"
  },
  "dependencies": {
    "desandro-get-style-property": "https://github.com/eiriklv/get-style-property/archive/a5a74ad48d96c7d5ddcf652e9fa5d4283af37823.tar.gz",
    "desandro-matches-selector": "https://github.com/desandro/matches-selector/archive/2d7702eab3393838e8098971a03cbec3fe7f5891.tar.gz",
    "doc-ready": "https://github.com/puruzio/doc-ready/archive/4d82e5d5a00c89b56d3fb8bd8bc0032e7b9af312.tar.gz",
    "eventemitter": "https://github.com/braznaavtrav/EventEmitter/archive/7169056a2f8b3b55d78ab1b85bad39277e7e88b2.tar.gz",
    "eventie": "https://github.com/eiriklv/eventie/archive/c9d290c6aa57712257dc8c0b6bf21c9374190a3c.tar.gz",
    "get-size": "https://github.com/puruzio/get-size/archive/5538bce74ce9c6746d9bcebf309706c80d933467.tar.gz"
  },
  "description": "the brains and guts of a layout library",
  "devDependencies": {
    "jquery": ">=1.4.3 <2",
    "jquery-bridget": "github:braznaavtrav/jquery-bridget",
    "qunit": "^0.7.5"
  },
  "homepage": "https://github.com/braznaavtrav/outlayer#readme",
  "main": "outlayer.js",
  "name": "outlayer",
  "optionalDependencies": {},
  "readme": "# Outlayer\n\n_Layout class_\n\nOutlayer is a base layout class for layout libraries like [Packery](http://packery.metafizzy.co) and [Masonry](http://masonry.desandro.com)\n\nOutlayer layouts work with a container element and children item elements.\n\n``` html\n<div class=\"container\">\n  <div class=\"item\"></div>\n  <div class=\"item\"></div>\n  <div class=\"item\"></div>\n  ...\n</div>\n```\n\n## Outlayer.create()\n\nCreate a layout class with `Outlayer.create()`\n\n``` js\nvar Layout = Outlayer.create( namespace );\n// for example\nvar Masonry = Outlayer.create('masonry');\n```\n\n+ `namespace` _{String}_ should be camelCased\n+ returns `LayoutClass` _{Function}_\n\nCreate a new layout class. `namespace` is used for jQuery plugin, and for declarative initialization.\n\nThe `Layout` inherits from [`Outlayer.prototype`](docs/outlayer.md).\n\n```\nvar elem = document.querySelector('#selector');\nvar msnry = new Masonry( elem, {\n  // set options...\n  columnWidth: 200\n});\n```\n\n## Item\n\nLayouts work with Items, accessible as `Layout.Item`. See [Item API](docs/item.md).\n\n## Declarative\n\nAn Outlayer layout class can be initialized via HTML, by setting a class of `.js-namespace` on the element. Options can be set via a `data-namespace-options` attribution. For example:\n\n``` html\n<!-- var Masonry = Outlayer.create('masonry') -->\n<div id=\"container\" class=\"js-masonry\"\n  data-masonry-options='{ \"itemSelector\": \".item\", \"columnWidth\": 200 }'>\n  ...\n</div>\n```\n\nThe declarative attributes and class will be dashed. i.e. `Outlayer.create('myNiceLayout')` will use `js-my-nice-layout` the class and `data-my-nice-layout-options` as the options attribute.\n\n## .data()\n\nGet a layout instance from an element.\n\n```\nvar myMasonry = Masonry.data( document.querySelector('#container') );\n```\n\n## jQuery plugin\n\nThe layout class also works as jQuery plugin.\n\n``` js\n// create Masonry layout class, namespace will be the jQuery method\nvar Masonry = Outlayer.create('masonry');\n// rock some jQuery\n$( function() {\n  // .masonry() to initialize\n  var $container = $('#container').masonry({\n    // options...\n  });\n  // methods are available by passing a string as first parameter\n  $container.masonry( 'reveal', elems );\n});\n```\n\n## RequireJS\n\nTo use Outlayer with [RequireJS](http://requirejs.org/), you'll need to set some config.\n\nSet [baseUrl](http://requirejs.org/docs/api.html#config-baseUrl) to bower_components and set a [path config](http://requirejs.org/docs/api.html#config-paths) for all your application code.\n\n``` js\nrequirejs.config({\n  baseUrl: 'bower_components',\n  paths: {\n    app: '../'\n  }\n});\n\nrequirejs( [ 'outlayer/outlayer', 'app/my-component.js' ], function( Outlayer, myComp ) {\n  new Outlayer( /*...*/ )\n});\n```\n\nOr set a path config for all Outlayer dependencies.\n\n``` js\nrequirejs.config({\n  paths: {\n    eventie: 'bower_components/eventie',\n    'doc-ready': 'bower_components/doc-ready',\n    eventEmitter: 'bower_components/eventEmitter',\n    'get-style-property': 'bower_components/get-style-property',\n    'get-size': 'bower_components/get-size',\n    'matches-selector': 'bower_components/matches-selector'\n  }\n});\n```\n\n## MIT license\n\nOutlayer is released under the [MIT license](http://desandro.mit-license.org).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/braznaavtrav/outlayer.git"
  },
  "version": "1.2.0"
}
